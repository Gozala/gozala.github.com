---
layout: post
title: Adjectives | Ubiquity + Bugzilla love
tags: ubiquity bugzilla
---

Finally I got a new laptop and a weekend to play with something interesting !!.  As I mentioned in one of my previous blog posts I had some discomfort with Ubiquity while trying to work on a complex commands. I also mentioned some ideas how I thought the things could be improved. Unfortunately I have not got any support from Ubiquity side so I decided to try to implement whatever I had in my mind. (If interested check my previous posts). You might noticed  <a title="Set of ubiquity commands for Bugzilla " href="http://gozala.github.com/ubiquity/commands/bugzilla/" target="_blank">link</a> on my home page pointing to the feed with a set of Ubiquity Commands for Bugzilla. Well development process is in it's alpha period right now, but still I would be happy if you'll give it a try and of course any feedback is more then welcome. It won't kill your browser or PC in the worst case scenario you can just unsubscribe from the command feed.

So in this post I want to touch several topics
<ol>
	<li>*Current state of Bugzilla commands*</li>
	<li>*View from the inside - Adjectives, way to extend nouns*</li>
	<li>*Problems / Plans*</li>
</ol>
h2. Current state of Bugzilla commands


Currently feed contains several commands:
<ul>
	<li>
h3. *bugzilla-connection-add*


</li>
	<li>
h3. *bugzilla-connection-remove*


bq. The idea behind these commands is to make user able to configure several Bugzilla connections. For most of the users I can imagine there will be only one connection for Bugzilla, but there will be some people (For example) who would need to have several of them. I personally use <a href="https://bugzilla.mozilla.org/" target="_blank">https://bugzilla.mozilla.org</a> and <a href="https://bugs.kde.org/" target="_blank">https://bugs.kde.org</a>, so not being able to use Bugzilla commands on any of thous is unacceptable.

Ideally you won't be able to use Bugzilla command until you'll set up at least one connection. In order to do so all you need is to type
<pre>*<span style="color:#cc99ff;">bugzilla-connection-add</span> <span style="color:#ffcc00;">name</span> mozilla <span style="color:#ffcc00;">url</span> https://bugzilla.mozilla.org <span style="color:#ffcc00;">user</span> USER <span style="color:#ffcc00;">password</span> PASSWORD
*</pre>
<div class="mceTemp"><dl class="wp-caption alignnone"> <dt class="wp-caption-dt"><img class="size-full wp-image-63" title="bugzilla-connection-add" src="http://rfobic.files.wordpress.com/2009/03/picture-2.png" alt="bugzilla-connection-add" width="600" height="420" /></dt> </dl></div>
Please change the *USER* with the real user which should be your email address and *PASSWORD* with whatever your password is. In the end it should look like picture below. _(In case if you don't have a user / password you can register and get them otherwise you can type some random words)_ <span style="text-decoration:underline;">_Currently none of the commands use user / pass data._</span>

_* Name of the connection in the example above - *mozilla, *is the name you'll use to tell ubiquity, which bugzilla system are you talking about... (There will be more details below)._
</li>
	<li>
h3. *bugzilla-info-version
*


This is simple command which will show the version of the Bugzilla system on the server. Nice part here is that Ubiquity knows that we have only one connection so it automatically uses that one. Typing command itself should be enough to see screen like
<div class="mceTemp"><dl class="wp-caption alignnone"> <dt class="wp-caption-dt"><img class="size-full wp-image-64" title="bugzilla-info-version" src="http://rfobic.files.wordpress.com/2009/03/picture-1.png" alt="screen-shot for ubiquity command" width="600" height="210" /></dt> </dl></div></li>
	<li>
h3. bugzilla-get


This one is the last one, so far, but it's a sweetest on as well !! Yes it returns the info for the bug by it's id. This nice pat takes input of, bug numbers separated by white-space character(s) and uses async calls to get the data from Bugzilla xmlrpc service. Well it's better to look at the picture below:
<div class="mceTemp"><dl class="wp-caption alignnone"> <dt class="wp-caption-dt"><img class="size-full wp-image-65" title="bugzilla-get" src="http://rfobic.files.wordpress.com/2009/03/picture-21.png" alt="da" width="600" height="376" /></dt> </dl></div>
Important points are not that visible yet. As you can see in the screen-shot's ubiquity always adds string "*in mozilla*" to the command suggestions. It' trivial cause we have only one connection and we called it *mozilla* so what's a big deal about it ?... Well lets add one more connection by running command:
<pre>**<span style="color:#cc99ff;">bugzilla-connection-add</span> <span style="color:#ffcc00;">name</span> kde <span style="color:#ffcc00;">url</span> https://bugs.kde.org <span style="color:#ffcc00;">user</span> USER <span style="color:#ffcc00;">password</span> PASSWORD
**</pre>
Now we have when we have two connections one for Mozilla and another for KDE we can look at few more pictures.

Ubiquity will search bug *4234* in the KDE Bugzilla system, still not a big deal I agree, but since you started discussion with ubiquity about KDE it remembers it like if it was a human and next thing you'll men
<div class="mceTemp"><dl class="wp-caption alignnone"> <dt class="wp-caption-dt"><img class="size-full wp-image-66" title="bugzilla-get" src="http://rfobic.files.wordpress.com/2009/03/picture-4.png" alt="bugzilla-get" width="600" height="384" /></dt> </dl></div>
In this screen we can see that Ubiquity automatically suggests to search for a Bug in the KDE Bugzilla as I started typing *in kde*
<div class="mceTemp"><dl class="wp-caption alignnone"> <dt class="wp-caption-dt"><img class="size-full wp-image-67" title="bugzilla-get" src="http://rfobic.files.wordpress.com/2009/03/picture-5.png" alt="bugzilla-get" width="600" height="430" /></dt> </dl></div>
In this screen I just typed the bug number, but as I was talking with ubiquity about bugs in KDE it assumes that I still talk about KDE so I don't need to retype that part again
<div class="mceTemp"><dl class="wp-caption alignnone"> <dt class="wp-caption-dt"><img class="size-full wp-image-68" title="bugzilla-get" src="http://rfobic.files.wordpress.com/2009/03/picture-6.png" alt="get" width="600" height="455" /></dt> </dl></div>
In this case I just typed command without specifying nor connection nor bug id.  As I mentioned bug 9876 in the KDE bugzilla ubiquity still assumes that I'm talking about the same things and that's the way we act while discussing something with humans. We assume that person we are talking with understands, that we are talking about the same topic unless we changed it. So I tried to bring the same approach here ubiquity remembers whatever you said and assumes that next command is related to previous one so you don't need to repeat all the details. Ubiquity stores this data across the sessions so even week after the last command you can still go on with it. Benefits of this approach will be much more visible when the next command *bugzilla-comment* will be fired where you'll be able to specify only comment (connection & bug will be resolved automatically)
<span style="color:#ff99cc;">
<span style="text-decoration:underline;">*Wonder how to bring this approach to your / any other command ?? Then next session is for you !!*</span></span></li>
</ul>
h2. *View from the inside - Adjectives, way to extend nouns
*


bq. So below is the code which adds a function CreateAdjective to the CmdUtils that can be used inside the command feed. Function itself extends normal ubiquity *nouns* to so called "*adjectives*". Basically it function takes noun as an argument and adds some useful functions, getters, properties.  Lets take a look at each of the feature:
<ul>
	<li>*<span style="text-decoration:underline;">dependency resolution</span>
* _Lets talk about the command *bugzilla-get* which was demoed in the first part. Command takes bug id and connection. Each of those two arguments are nouns first one *BugById *and second one *Connection. *As the first one populates data from server it makes no sense at all if there is no connection to server from which this data could be populated. Logically *BugById* depends on *Connection. Connection *itself populates data from the preferences which at some point was stored by user, so logically *Connection *depends on the existence of (lets assume) *X* preference. Of course this could be easily checked by the command on preview with some if / else closes, but if we'll look a bit forward into command *bugzilla-comment *which will take a *comment,** *which depends on the bug, which depends on a connection we have even more closes in the commands, this closes are often shared between the commands ....  Code gets messy and I am sure you could think of even more complicated situations here._

_Function adds getter reliable to the noun which returns true in case if all the dependencies were reliable. Basically it checks reliable property of each dependency. Dependencies are the members of the array which is property "dependencies" of the noun. In case if noun has no dependencies it is automatically reliable. In our case *BugById* has member *dependencies* *= [Connection]*. While *Connection* has member *dependencies = [{get reliable() { /* check of the existence of the preference */}}]
*_ *
*</li>
	<li><span style="text-decoration:underline;">*delay before suggestions*</span>*
*_As mentioned above noun *BugById* populates it's data / suggestions from the server, basically it means that it sends user input to the server and generates suggestions from the server response data. Unfortunately it means that on each key-press noun makes request to the server which takes traffic slows down ubiquity itself, while the idea is to send a user input when the input is done. In this particular case if I want to get info for a bug 1768 there will be for requests (1, 17, 176, 1768) while I just need the last one._

_If noun had a property *delay* and noun got extended to an Adjective. suggest function of the noun will be fired only after user stops typing for {*delay*} milliseconds.
_</li>
	<li><span style="text-decoration:underline;">*History control
*</span>One of the nice features in the demo above was that ubiquity was assuming the values of the modifiers that have not been specified by user. Simply Assuming that value is the one which user has specified last time. Actually there could be case were ubiquity would need more then just last value. In the BugById it's necessary to get the info from server but there could be the cases where the caching data locally could be much better option.  Also this data should be stored between the sessions. Doing all this history control flow soon becomes complex (Initially I tried that way :)

So noun extended to the Adjective will get function history which takes optional argument to specify how many suggestions from history should be taken, if noun had property cache with value true history will be populated from the local store. if not it will just get a text and will use suugest function of the noun to rebuild data as if it was users input. function can take second optional argument for callbacks in case if data should be retrieved from the server  in async manner. In that case callback will be called for each suggestion. This way the last suggestion could be accessed with history(1)[0] or full history by history(). If noun has a property memory, it's a number of the suggestions that can be stored in the history if no memory member exists in noun memory will be 10.  History can be added from the command itself by calling addHistory() and passing modifier and particular element from history can be removed as well by calling removeHistory. Unfortunately  there is no way to automate this process as noun doesn't knows which suggestion was selected by user.</li>
</ul>

bq. I believe a lot can be still improved in this schema (Like storing suggestion in the SQLite instead of prefs), but that's how it looks now.
<pre style="background:#3f3f3f;color:#aaaaaa;"><span>
<span style="color:#777777;">  14    </span><span style="color:#636666;font-style:italic;">/**
</span><span style="color:#777777;">  15    </span><span style="color:#636666;font-style:italic;"> * Mutates noun to the adjective
</span><span style="color:#777777;">  16    </span><span style="color:#636666;font-style:italic;"> * Adds dependency resolver
</span><span style="color:#777777;">  17    </span><span style="color:#636666;font-style:italic;"> * Adds suggestion history cache
</span><span style="color:#777777;">  18    </span><span style="color:#636666;font-style:italic;"> * Adds delay support for suggestions
</span><span style="color:#777777;">  19    </span><span style="color:#636666;font-style:italic;"> */</span>
<span style="color:#777777;">  20    </span><span style="color:#c3bdaf;">CmdUtils</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">CreateAdjective</span><span> </span><span style="color:#47b8d7;">=</span><span> </span><span style="color:#c1c144;">function</span><span> </span><span style="color:#c3bdaf;">CreateAdjective</span><span> </span><span style="color:#47b8d7;">(</span><span style="color:#c3bdaf;">noun</span><span style="color:#47b8d7;">)</span><span> </span><span style="color:#47b8d7;">{</span>
<span style="color:#777777;">  21    </span><span>    </span><span style="color:#636666;font-style:italic;">/**
</span><span style="color:#777777;">  22    </span><span style="color:#636666;font-style:italic;">     * Checks all the dependencies and returns true if all of them are satisfied
</span><span style="color:#777777;">  23    </span><span style="color:#636666;font-style:italic;">     * </span><span style="color:#636666;font-style:italic;">@returns</span><span style="color:#636666;font-style:italic;"> {boolean}
</span><span style="color:#777777;">  24    </span><span style="color:#636666;font-style:italic;">     */</span>
<span style="color:#777777;">  25    </span><span>    </span><span style="color:#c3bdaf;">noun</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">__defineGetter__</span><span style="color:#47b8d7;">(</span><span style="color:#ad9361;">'reliable'</span><span style="color:#47b8d7;">,</span><span> </span><span style="color:#c1c144;">function</span><span> </span><span style="color:#c3bdaf;">relible</span><span style="color:#47b8d7;">(){</span>
<span style="color:#777777;">  26    </span><span>        </span><span style="color:#c1c144;">for</span><span> </span><span style="color:#c3bdaf;">each</span><span> </span><span style="color:#47b8d7;">(</span><span style="color:#c1c144;">var</span><span> </span><span style="color:#c3bdaf;">dependency</span><span> </span><span style="color:#c1c144;">in</span><span> </span><span style="color:#c1c144;">this</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">dependencies</span><span style="color:#47b8d7;">)</span>
<span style="color:#777777;">  27    </span><span>            </span><span style="color:#c1c144;">if</span><span> </span><span style="color:#47b8d7;">(!</span><span style="color:#c3bdaf;">dependency</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">reliable</span><span style="color:#47b8d7;">)</span><span> </span><span style="color:#c1c144;">return</span><span> </span><span style="color:#c1c144;">false</span>
<span style="color:#777777;">  28    </span><span>        </span><span style="color:#c1c144;">return</span><span> </span><span style="color:#c1c144;">true</span><span style="color:#47b8d7;">;</span>
<span style="color:#777777;">  29    </span><span>    </span><span style="color:#47b8d7;">}),</span>
<span style="color:#777777;">  30    </span><span>    </span><span style="color:#636666;font-style:italic;">/**
</span><span style="color:#777777;">  31    </span><span style="color:#636666;font-style:italic;">     * Delay which will happen before parser will satrt parseing input
</span><span style="color:#777777;">  32    </span><span style="color:#636666;font-style:italic;">     * If input will change before suggestions will be canceled
</span><span style="color:#777777;">  33    </span><span style="color:#636666;font-style:italic;">     * </span><span style="color:#636666;font-style:italic;">@type</span><span style="color:#636666;font-style:italic;"> Integer number of miliseconds
</span><span style="color:#777777;">  34    </span><span style="color:#636666;font-style:italic;">     */</span>
<span style="color:#777777;">  35    </span><span>    </span><span style="color:#c3bdaf;">noun</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">delay</span><span> </span><span style="color:#47b8d7;">=</span><span> </span><span style="color:#c3bdaf;">noun</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">delay</span><span> </span><span style="color:#47b8d7;">||</span><span> </span><span style="color:#9b456f;">0</span><span style="color:#47b8d7;">;</span>
<span style="color:#777777;">  36    </span><span>    </span><span style="color:#636666;font-style:italic;">/**
</span><span style="color:#777777;">  37    </span><span style="color:#636666;font-style:italic;">     * Length length
</span><span style="color:#777777;">  38    </span><span style="color:#636666;font-style:italic;">     */</span>
<span style="color:#777777;">  39    </span><span>    </span><span style="color:#c3bdaf;">noun</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">memory</span><span> </span><span style="color:#47b8d7;">=</span><span> </span><span style="color:#c3bdaf;">noun</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">memory</span><span> </span><span style="color:#47b8d7;">||</span><span> </span><span style="color:#9b456f;">10</span><span style="color:#47b8d7;">;</span>
<span style="color:#777777;">  40    </span><span>    </span><span style="color:#636666;font-style:italic;">/**
</span><span style="color:#777777;">  41    </span><span style="color:#636666;font-style:italic;">     * This property is used to store timer id for the delayed suggestions
</span><span style="color:#777777;">  42    </span><span style="color:#636666;font-style:italic;">     * </span><span style="color:#636666;font-style:italic;">@type</span><span style="color:#636666;font-style:italic;"> {string}
</span><span style="color:#777777;">  43    </span><span style="color:#636666;font-style:italic;">     */</span>
<span style="color:#777777;">  44    </span><span>    </span><span style="color:#c3bdaf;">noun</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">_timerId</span><span> </span><span style="color:#47b8d7;">=</span><span> </span><span style="color:#c1c144;">null</span><span style="color:#47b8d7;">;</span>
<span style="color:#777777;">  45    </span><span>    </span><span style="color:#636666;font-style:italic;">/**
</span><span style="color:#777777;">  46    </span><span style="color:#636666;font-style:italic;">     * Saving original suggest in order to be able to use it after mutation
</span><span style="color:#777777;">  47    </span><span style="color:#636666;font-style:italic;">     */</span>
<span style="color:#777777;">  48    </span><span>    </span><span style="color:#c3bdaf;">noun</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">_suggest</span><span> </span><span style="color:#47b8d7;">=</span><span> </span><span style="color:#c3bdaf;">noun</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">suggest</span><span style="color:#47b8d7;">;</span>
<span style="color:#777777;">  49    </span><span>    </span><span style="color:#636666;font-style:italic;">/**
</span><span style="color:#777777;">  50    </span><span style="color:#636666;font-style:italic;">     * returns suggestions
</span><span style="color:#777777;">  51    </span><span style="color:#636666;font-style:italic;">     */</span>
<span style="color:#777777;">  52    </span><span>    </span><span style="color:#c3bdaf;">noun</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">suggest</span><span> </span><span style="color:#47b8d7;">=</span><span> </span><span style="color:#c1c144;">function</span><span> </span><span style="color:#c3bdaf;">suggest</span><span style="color:#47b8d7;">()</span><span> </span><span style="color:#47b8d7;">{</span>
<span style="color:#777777;">  53    </span><span>        </span><span style="color:#c1c144;">if</span><span> </span><span style="color:#47b8d7;">(</span><span style="color:#c1c144;">this</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">reliable</span><span style="color:#47b8d7;">)</span><span> </span><span style="color:#47b8d7;">{</span>
<span style="color:#777777;">  54    </span><span>            </span><span style="color:#c3bdaf;">Utils</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">clearTimeout</span><span style="color:#47b8d7;">(</span><span style="color:#c1c144;">this</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">_timerId</span><span style="color:#47b8d7;">);</span>
<span style="color:#777777;">  55    </span><span>            </span><span style="color:#c1c144;">var</span><span> </span><span style="color:#c3bdaf;">args</span><span> </span><span style="color:#47b8d7;">=</span><span> </span><span style="color:#c3bdaf;">arguments</span><span style="color:#47b8d7;">;</span>
<span style="color:#777777;">  56    </span><span>            </span><span style="color:#c1c144;">if</span><span> </span><span style="color:#47b8d7;">(</span><span style="color:#c1c144;">this</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">delay</span><span> </span><span style="color:#47b8d7;">==</span><span> </span><span style="color:#9b456f;">0</span><span style="color:#47b8d7;">)</span>
<span style="color:#777777;">  57    </span><span>                </span><span style="color:#c1c144;">return</span><span> </span><span style="color:#c3bdaf;">noun</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">_suggest</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">apply</span><span style="color:#47b8d7;">(</span><span style="color:#c1c144;">this</span><span style="color:#47b8d7;">,</span><span> </span><span style="color:#c3bdaf;">args</span><span style="color:#47b8d7;">);</span>
<span style="color:#777777;">  58    </span><span>            </span><span style="color:#636666;font-style:italic;">// If mutate
</span><span style="color:#777777;">  59    </span><span>            </span><span style="color:#c1c144;">this</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">_timerId</span><span> </span><span style="color:#47b8d7;">=</span><span> </span><span style="color:#c3bdaf;">Utils</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">setTimeout</span><span style="color:#47b8d7;">(</span><span style="color:#c1c144;">function</span><span style="color:#47b8d7;">(){</span>
<span style="color:#777777;">  60    </span><span>                </span><span style="color:#c3bdaf;">noun</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">_suggest</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">apply</span><span style="color:#47b8d7;">(</span><span style="color:#c3bdaf;">noun</span><span style="color:#47b8d7;">,</span><span> </span><span style="color:#c3bdaf;">args</span><span style="color:#47b8d7;">);</span>
<span style="color:#777777;">  61    </span><span>            </span><span style="color:#47b8d7;">},</span><span> </span><span style="color:#c1c144;">this</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">delay</span><span style="color:#47b8d7;">);</span>
<span style="color:#777777;">  62    </span><span>
</span><span style="color:#777777;">  63    </span><span>            </span><span style="color:#636666;font-style:italic;">// Workaround for async suggestions bug
</span><span style="color:#777777;">  64    </span><span>            </span><span style="color:#636666;font-style:italic;">// https://bugzilla.mozilla.org/show_bug.cgi?id=484615
</span><span style="color:#777777;">  65    </span><span>            </span><span style="color:#c1c144;">return</span><span> </span><span style="color:#47b8d7;">[{</span>
<span style="color:#777777;">  66    </span><span>                </span><span style="color:#c3bdaf;">text</span><span> </span><span style="color:#47b8d7;">:</span><span> </span><span style="color:#ad9361;">'BUG 484615'</span><span style="color:#47b8d7;">,</span>
<span style="color:#777777;">  67    </span><span>                </span><span style="color:#c3bdaf;">summary</span><span> </span><span style="color:#47b8d7;">:</span><span> </span><span style="color:#ad9361;">'Workaround for bug 484615'</span><span style="color:#47b8d7;">,</span>
<span style="color:#777777;">  68    </span><span>                </span><span style="color:#c3bdaf;">html</span><span> </span><span style="color:#47b8d7;">:</span><span> </span><span style="color:#ad9361;">'<a href="https://bugzilla.mozilla.org/show_bug.cgi?id=484615">BUG 484615</a>'</span><span style="color:#47b8d7;">,</span>
<span style="color:#777777;">  69    </span><span>                </span><span style="color:#c3bdaf;">data</span><span> </span><span style="color:#47b8d7;">:</span><span> </span><span style="color:#47b8d7;">{</span><span style="color:#c3bdaf;">summary</span><span style="color:#47b8d7;">:(</span><span style="color:#c1c144;">new</span><span> </span><span style="color:#c3bdaf;">String</span><span style="color:#47b8d7;">(</span><span style="color:#ad9361;">"Ubiquity Asynchronous Noun Suggestions are not working"</span><span style="color:#47b8d7;">)),</span><span> </span><span style="color:#c3bdaf;">internals</span><span style="color:#47b8d7;">:{</span><span style="color:#c3bdaf;">cf_blocki</span><span style="color:#777777;">        </span><span style="color:#c3bdaf;">ng_fennec</span><span style="color:#47b8d7;">:(</span><span style="color:#c1c144;">new</span><span> </span><span style="color:#c3bdaf;">String</span><span style="color:#47b8d7;">(</span><span style="color:#ad9361;">"---"</span><span style="color:#47b8d7;">)),</span><span> </span><span style="color:#c3bdaf;">priority</span><span style="color:#47b8d7;">:(</span><span style="color:#c1c144;">new</span><span> </span><span style="color:#c3bdaf;">String</span><span style="color:#47b8d7;">(</span><span style="color:#ad9361;">"--"</span><span style="color:#47b8d7;">)),</span><span> </span><span style="color:#c3bdaf;">bug_id</span><span style="color:#47b8d7;">:(</span><span style="color:#c1c144;">new</span><span> </span><span style="color:#c3bdaf;">Number</span><span style="color:#47b8d7;">(</span><span style="color:#9b456f;">484615</span><span style="color:#47b8d7;">)),</span><span> </span><span style="color:#c3bdaf;">_multi_selects</span><span style="color:#47b8d7;">:[],</span><span> </span><span style="color:#c3bdaf;">bug_file_loc</span><span style="color:#47b8d7;">:(</span><span style="color:#c1c144;">ne</span><span style="color:#777777;">        </span><span style="color:#c1c144;">w</span><span> </span><span style="color:#c3bdaf;">String</span><span style="color:#47b8d7;">(</span><span style="color:#ad9361;">"http://groups.google.com/group/ubiquity-firefox/browse_thread/thread/d556c431e40ff9aa"</span><span style="color:#47b8d7;">)),</span><span> </span><span style="color:#c3bdaf;">cclist_accessible</span><span style="color:#47b8d7;">:(</span><span style="color:#c1c144;">new</span><span> </span><span style="color:#c3bdaf;">N</span><span style="color:#777777;">        </span><span style="color:#c3bdaf;">umber</span><span style="color:#47b8d7;">(</span><span style="color:#9b456f;">1</span><span style="color:#47b8d7;">)),</span><span> </span><span style="color:#c3bdaf;">rep_platform</span><span style="color:#47b8d7;">:(</span><span style="color:#c1c144;">new</span><span> </span><span style="color:#c3bdaf;">String</span><span style="color:#47b8d7;">(</span><span style="color:#ad9361;">"x86"</span><span style="color:#47b8d7;">)),</span><span> </span><span style="color:#c3bdaf;">product_id</span><span style="color:#47b8d7;">:(</span><span style="color:#c1c144;">new</span><span> </span><span style="color:#c3bdaf;">Number</span><span style="color:#47b8d7;">(</span><span style="color:#9b456f;">40</span><span style="color:#47b8d7;">)),</span><span> </span><span style="color:#c3bdaf;">creation_ts</span><span style="color:#47b8d7;">:(</span><span style="color:#c1c144;">new</span><span> </span><span style="color:#c3bdaf;">String</span><span style="color:#47b8d7;">(</span><span style="color:#ad9361;">"2009.03.21 17:46"</span><span style="color:#47b8d7;">)),</span><span> </span><span style="color:#c3bdaf;">assi</span><span style="color:#777777;">        </span><span style="color:#c3bdaf;">gned_to</span><span style="color:#47b8d7;">:(</span><span style="color:#c1c144;">new</span><span> </span><span style="color:#c3bdaf;">Number</span><span style="color:#47b8d7;">(</span><span style="color:#9b456f;">298253</span><span style="color:#47b8d7;">)),</span><span> </span><span style="color:#c3bdaf;">short_desc</span><span style="color:#47b8d7;">:(</span><span style="color:#c1c144;">new</span><span> </span><span style="color:#c3bdaf;">String</span><span style="color:#47b8d7;">(</span><span style="color:#ad9361;">"Ubiquity Asynchronous Noun Suggestions are not working"</span><span style="color:#47b8d7;">)),</span><span> </span><span style="color:#c3bdaf;">qa_contact</span><span style="color:#47b8d7;">:</span><span style="color:#777777;">        </span><span style="color:#47b8d7;">(</span><span style="color:#c1c144;">new</span><span> </span><span style="color:#c3bdaf;">Number</span><span style="color:#47b8d7;">(</span><span style="color:#9b456f;">247525</span><span style="color:#47b8d7;">)),</span><span> </span><span style="color:#c3bdaf;">everconfirmed</span><span style="color:#47b8d7;">:(</span><span style="color:#c1c144;">new</span><span> </span><span style="color:#c3bdaf;">Number</span><span style="color:#47b8d7;">(</span><span style="color:#9b456f;">0</span><span style="color:#47b8d7;">)),</span><span> </span><span style="color:#c3bdaf;">status_whiteboard</span><span style="color:#47b8d7;">:(</span><span style="color:#c1c144;">new</span><span> </span><span style="color:#c3bdaf;">String</span><span style="color:#47b8d7;">(</span><span style="color:#ad9361;">""</span><span style="color:#47b8d7;">)),</span><span> </span><span style="color:#c3bdaf;">bug_severity</span><span style="color:#47b8d7;">:(</span><span style="color:#c1c144;">new</span><span> </span><span style="color:#c3bdaf;">String</span><span style="color:#47b8d7;">(</span><span style="color:#ad9361;">"major"</span><span style="color:#47b8d7;">)),</span><span style="color:#777777;">        </span><span> </span><span style="color:#c3bdaf;">bug_status</span><span style="color:#47b8d7;">:(</span><span style="color:#c1c144;">new</span><span> </span><span style="color:#c3bdaf;">String</span><span style="color:#47b8d7;">(</span><span style="color:#ad9361;">"UNCONFIRMED"</span><span style="color:#47b8d7;">)),</span><span> </span><span style="color:#c3bdaf;">delta_ts</span><span style="color:#47b8d7;">:(</span><span style="color:#c1c144;">new</span><span> </span><span style="color:#c3bdaf;">String</span><span style="color:#47b8d7;">(</span><span style="color:#ad9361;">"2009-03-21 17:46:06"</span><span style="color:#47b8d7;">)),</span><span> </span><span style="color:#c3bdaf;">version</span><span style="color:#47b8d7;">:(</span><span style="color:#c1c144;">new</span><span> </span><span style="color:#c3bdaf;">String</span><span style="color:#47b8d7;">(</span><span style="color:#ad9361;">"unspecified"</span><span style="color:#47b8d7;">)),</span><span> </span><span style="color:#777777;">        </span><span style="color:#c3bdaf;">reporter_id</span><span style="color:#47b8d7;">:(</span><span style="color:#c1c144;">new</span><span> </span><span style="color:#c3bdaf;">Number</span><span style="color:#47b8d7;">(</span><span style="color:#9b456f;">295373</span><span style="color:#47b8d7;">)),</span><span> </span><span style="color:#c3bdaf;">component_id</span><span style="color:#47b8d7;">:(</span><span style="color:#c1c144;">new</span><span> </span><span style="color:#c3bdaf;">Number</span><span style="color:#47b8d7;">(</span><span style="color:#9b456f;">757</span><span style="color:#47b8d7;">)),</span><span> </span><span style="color:#c3bdaf;">resolution</span><span style="color:#47b8d7;">:(</span><span style="color:#c1c144;">new</span><span> </span><span style="color:#c3bdaf;">String</span><span style="color:#47b8d7;">(</span><span style="color:#ad9361;">""</span><span style="color:#47b8d7;">)),</span><span> </span><span style="color:#c3bdaf;">reporter_accessible</span><span style="color:#47b8d7;">:(</span><span style="color:#c1c144;">new</span><span> </span><span style="color:#c3bdaf;">Numb</span><span style="color:#777777;">        </span><span style="color:#c3bdaf;">er</span><span style="color:#47b8d7;">(</span><span style="color:#9b456f;">1</span><span style="color:#47b8d7;">)),</span><span> </span><span style="color:#c3bdaf;">target_milestone</span><span style="color:#47b8d7;">:(</span><span style="color:#c1c144;">new</span><span> </span><span style="color:#c3bdaf;">String</span><span style="color:#47b8d7;">(</span><span style="color:#ad9361;">"--"</span><span style="color:#47b8d7;">)),</span><span> </span><span style="color:#c3bdaf;">alias</span><span style="color:#47b8d7;">:{},</span><span> </span><span style="color:#c3bdaf;">op_sys</span><span style="color:#47b8d7;">:(</span><span style="color:#c1c144;">new</span><span> </span><span style="color:#c3bdaf;">String</span><span style="color:#47b8d7;">(</span><span style="color:#ad9361;">"Mac OS X"</span><span style="color:#47b8d7;">))},</span><span> </span><span style="color:#c3bdaf;">id</span><span style="color:#47b8d7;">:(</span><span style="color:#c1c144;">new</span><span> </span><span style="color:#c3bdaf;">Number</span><span style="color:#47b8d7;">(</span><span style="color:#9b456f;">484615</span><span style="color:#47b8d7;">)),</span><span> </span><span style="color:#c3bdaf;">last_chang</span><span style="color:#777777;">        </span><span style="color:#c3bdaf;">e_time</span><span style="color:#47b8d7;">:(</span><span style="color:#c1c144;">new</span><span> </span><span style="color:#c3bdaf;">Date</span><span style="color:#47b8d7;">(</span><span style="color:#9b456f;">1240328766122</span><span style="color:#47b8d7;">)),</span><span> </span><span style="color:#c3bdaf;">creation_time</span><span style="color:#47b8d7;">:(</span><span style="color:#c1c144;">new</span><span> </span><span style="color:#c3bdaf;">Date</span><span style="color:#47b8d7;">(</span><span style="color:#9b456f;">1240328760122</span><span style="color:#47b8d7;">)),</span><span> </span><span style="color:#c3bdaf;">alias</span><span style="color:#47b8d7;">:(</span><span style="color:#c1c144;">new</span><span> </span><span style="color:#c3bdaf;">String</span><span style="color:#47b8d7;">(</span><span style="color:#ad9361;">""</span><span style="color:#47b8d7;">))}</span>
<span style="color:#777777;">  70    </span><span>            </span><span style="color:#47b8d7;">}];</span>
<span style="color:#777777;">  71    </span><span>        </span><span style="color:#47b8d7;">}</span>
<span style="color:#777777;">  72    </span><span>        </span><span style="color:#c1c144;">return</span><span> </span><span style="color:#47b8d7;">[];</span>
<span style="color:#777777;">  73    </span><span>    </span><span style="color:#47b8d7;">};</span>
<span style="color:#777777;">  74    </span><span>    </span><span style="color:#636666;font-style:italic;">/**
</span><span style="color:#777777;">  75    </span><span style="color:#636666;font-style:italic;">     * Saving original default in order to be able to use it after mutation
</span><span style="color:#777777;">  76    </span><span style="color:#636666;font-style:italic;">     */</span>
<span style="color:#777777;">  77    </span><span>    </span><span style="color:#c3bdaf;">noun</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">_default</span><span> </span><span style="color:#47b8d7;">=</span><span> </span><span style="color:#c3bdaf;">noun</span><span style="color:#47b8d7;">.</span><span style="color:#c1c144;">default</span><span style="color:#47b8d7;">;</span>
<span style="color:#777777;">  78    </span><span>    </span><span style="color:#636666;font-style:italic;">/**
</span><span style="color:#777777;">  79    </span><span style="color:#636666;font-style:italic;">     * Proxy function for noun default that is enabled only in case if noun has default
</span><span style="color:#777777;">  80    </span><span style="color:#636666;font-style:italic;">     * Used to prevent any actions if object is not reliable
</span><span style="color:#777777;">  81    </span><span style="color:#636666;font-style:italic;">     * </span><span style="color:#636666;font-style:italic;">@returns</span><span style="color:#636666;font-style:italic;"> {Array}
</span><span style="color:#777777;">  82    </span><span style="color:#636666;font-style:italic;">     */</span>
<span style="color:#777777;">  83    </span><span>    </span><span style="color:#c3bdaf;">noun</span><span style="color:#47b8d7;">.</span><span style="color:#c1c144;">default</span><span> </span><span style="color:#47b8d7;">=</span><span> </span><span style="color:#47b8d7;">!</span><span style="color:#c3bdaf;">noun</span><span style="color:#47b8d7;">.</span><span style="color:#c1c144;">default</span><span> </span><span style="color:#47b8d7;">?</span><span> </span><span style="color:#c3bdaf;">noun</span><span style="color:#47b8d7;">.</span><span style="color:#c1c144;">default</span><span> </span><span style="color:#47b8d7;">:</span><span> </span><span style="color:#c1c144;">function</span><span style="color:#47b8d7;">()</span><span> </span><span style="color:#47b8d7;">{</span>
<span style="color:#777777;">  84    </span><span>        </span><span style="color:#c1c144;">if</span><span> </span><span style="color:#47b8d7;">(</span><span style="color:#c1c144;">this</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">reliable</span><span style="color:#47b8d7;">)</span><span> </span><span style="color:#47b8d7;">{</span>
<span style="color:#777777;">  85    </span><span>            </span><span style="color:#c1c144;">return</span><span> </span><span style="color:#c1c144;">this</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">_default</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">apply</span><span style="color:#47b8d7;">(</span><span style="color:#c1c144;">this</span><span style="color:#47b8d7;">,</span><span> </span><span style="color:#c3bdaf;">arguments</span><span style="color:#47b8d7;">);</span>
<span style="color:#777777;">  86    </span><span>        </span><span style="color:#47b8d7;">}</span>
<span style="color:#777777;">  87    </span><span>        </span><span style="color:#c1c144;">else</span>
<span style="color:#777777;">  88    </span><span>            </span><span style="color:#c1c144;">return</span><span> </span><span style="color:#47b8d7;">[];</span>
<span style="color:#777777;">  89    </span><span>    </span><span style="color:#47b8d7;">};</span>
<span style="color:#777777;">  90    </span><span>    </span><span style="color:#636666;font-style:italic;">/**
</span><span style="color:#777777;">  91    </span><span style="color:#636666;font-style:italic;">     * If true suggestion data will be cached.
</span><span style="color:#777777;">  92    </span><span style="color:#636666;font-style:italic;">     */</span>
<span style="color:#777777;">  93    </span><span>    </span><span style="color:#c3bdaf;">noun</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">cache</span><span> </span><span style="color:#47b8d7;">=</span><span> </span><span style="color:#c3bdaf;">noun</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">cache</span><span> </span><span style="color:#47b8d7;">||</span><span> </span><span style="color:#c1c144;">false</span><span style="color:#47b8d7;">;</span>
<span style="color:#777777;">  94    </span><span>    </span><span style="color:#636666;font-style:italic;">/**
</span><span style="color:#777777;">  95    </span><span style="color:#636666;font-style:italic;">     * History of suggestion
</span><span style="color:#777777;">  96    </span><span style="color:#636666;font-style:italic;">     */</span>
<span style="color:#777777;">  97    </span><span>    </span><span style="color:#c3bdaf;">noun</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">history</span><span> </span><span style="color:#47b8d7;">=</span><span> </span><span style="color:#c1c144;">function</span><span> </span><span style="color:#c3bdaf;">history</span><span style="color:#47b8d7;">(</span><span style="color:#c3bdaf;">limit</span><span style="color:#47b8d7;">,</span><span> </span><span style="color:#c3bdaf;">callback</span><span style="color:#47b8d7;">,</span><span> </span><span style="color:#c3bdaf;">self</span><span style="color:#47b8d7;">)</span><span> </span><span style="color:#47b8d7;">{</span>
<span style="color:#777777;">  98    </span><span>        </span><span style="color:#c3bdaf;">self</span><span> </span><span style="color:#47b8d7;">=</span><span> </span><span style="color:#c3bdaf;">self</span><span> </span><span style="color:#47b8d7;">||</span><span> </span><span style="color:#c3bdaf;">arguments</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">callee</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">caller</span><span style="color:#47b8d7;">;</span>
<span style="color:#777777;">  99    </span><span>        </span><span style="color:#c3bdaf;">limit</span><span> </span><span style="color:#47b8d7;">=</span><span> </span><span style="color:#c3bdaf;">limit</span><span> </span><span style="color:#47b8d7;">||</span><span> </span><span style="color:#c1c144;">this</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">memory</span><span style="color:#47b8d7;">;</span>
<span style="color:#777777;"> 100    </span><span>        </span><span style="color:#c1c144;">var</span><span> </span><span style="color:#c3bdaf;">suggestions</span><span> </span><span style="color:#47b8d7;">=</span><span> </span><span style="color:#47b8d7;">[];</span>
<span style="color:#777777;"> 101    </span><span>        </span><span style="color:#c1c144;">try</span><span> </span><span style="color:#47b8d7;">{</span>
<span style="color:#777777;"> 102    </span><span>            </span><span style="color:#c3bdaf;">suggestions</span><span> </span><span style="color:#47b8d7;">=</span><span> </span><span style="color:#c3bdaf;">Utils</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">decodeJson</span><span style="color:#47b8d7;">(</span><span style="color:#c3bdaf;">Application</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">prefs</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">getValue</span><span style="color:#47b8d7;">(</span><span style="color:#ad9361;">'ubiquity.adjectives.'</span><span> </span><span style="color:#47b8d7;">+</span><span> </span><span style="color:#c1c144;">this</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">_name</span><span> </span><span style="color:#47b8d7;">+</span><span> </span><span style="color:#ad9361;">'.history'</span><span style="color:#47b8d7;">,</span><span> </span><span style="color:#ad9361;">'[]'</span><span style="color:#777777;">        </span><span style="color:#47b8d7;">)).</span><span style="color:#c3bdaf;">slice</span><span style="color:#47b8d7;">(</span><span style="color:#9b456f;">0</span><span style="color:#47b8d7;">,</span><span> </span><span style="color:#c3bdaf;">limit</span><span style="color:#47b8d7;">);</span>
<span style="color:#777777;"> 103    </span><span>        </span><span style="color:#47b8d7;">}</span><span> </span><span style="color:#c1c144;">catch</span><span style="color:#47b8d7;">(</span><span style="color:#c3bdaf;">e</span><span style="color:#47b8d7;">)</span><span> </span><span style="color:#47b8d7;">{}</span>
<span style="color:#777777;"> 104    </span><span>
</span><span style="color:#777777;"> 105    </span><span>        </span><span style="color:#c1c144;">if</span><span> </span><span style="color:#47b8d7;">(</span><span style="color:#c1c144;">this</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">cache</span><span style="color:#47b8d7;">)</span><span> </span><span style="color:#47b8d7;">{</span>
<span style="color:#777777;"> 106    </span><span>            </span><span style="color:#c1c144;">if</span><span> </span><span style="color:#47b8d7;">(</span><span style="color:#c3bdaf;">callback</span><span style="color:#47b8d7;">)</span>
<span style="color:#777777;"> 107    </span><span>                </span><span style="color:#c3bdaf;">suggestions</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">forEach</span><span style="color:#47b8d7;">(</span><span style="color:#c1c144;">function</span><span style="color:#47b8d7;">(</span><span style="color:#c3bdaf;">suggestion</span><span style="color:#47b8d7;">)</span><span> </span><span style="color:#47b8d7;">{</span>
<span style="color:#777777;"> 108    </span><span>                    </span><span style="color:#c3bdaf;">callback</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">call</span><span style="color:#47b8d7;">(</span><span style="color:#c3bdaf;">self</span><span style="color:#47b8d7;">,</span><span> </span><span style="color:#c3bdaf;">suggestion</span><span style="color:#47b8d7;">);</span>
<span style="color:#777777;"> 109    </span><span>                </span><span style="color:#47b8d7;">});</span>
<span style="color:#777777;"> 110    </span><span>        </span><span style="color:#47b8d7;">}</span><span> </span><span style="color:#c1c144;">else</span><span> </span><span style="color:#47b8d7;">{</span>
<span style="color:#777777;"> 111    </span><span>            </span><span style="color:#c1c144;">if</span><span> </span><span style="color:#47b8d7;">(</span><span style="color:#c3bdaf;">callback</span><span style="color:#47b8d7;">)</span>
<span style="color:#777777;"> 112    </span><span>                </span><span style="color:#c3bdaf;">suggestions</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">forEach</span><span style="color:#47b8d7;">(</span><span style="color:#c1c144;">function</span><span style="color:#47b8d7;">(</span><span style="color:#c3bdaf;">suggestion</span><span style="color:#47b8d7;">)</span><span> </span><span style="color:#47b8d7;">{</span>
<span style="color:#777777;"> 113    </span><span>                    </span><span style="color:#c1c144;">this</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">suggest</span><span style="color:#47b8d7;">(</span><span style="color:#c3bdaf;">suggestion</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">text</span><span style="color:#47b8d7;">,</span><span> </span><span style="color:#c3bdaf;">suggestion</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">html</span><span style="color:#47b8d7;">,</span><span> </span><span style="color:#c1c144;">function</span><span style="color:#47b8d7;">(</span><span style="color:#c3bdaf;">data</span><span style="color:#47b8d7;">)</span><span> </span><span style="color:#47b8d7;">{</span>
<span style="color:#777777;"> 114    </span><span>                        </span><span style="color:#c3bdaf;">callback</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">call</span><span style="color:#47b8d7;">(</span><span style="color:#c3bdaf;">self</span><span style="color:#47b8d7;">,</span><span> </span><span style="color:#c3bdaf;">data</span><span style="color:#47b8d7;">);</span>
<span style="color:#777777;"> 115    </span><span>                    </span><span style="color:#47b8d7;">});</span>
<span style="color:#777777;"> 116    </span><span>                </span><span style="color:#47b8d7;">},</span><span> </span><span style="color:#c1c144;">this</span><span style="color:#47b8d7;">);</span>
<span style="color:#777777;"> 117    </span><span>            </span><span style="color:#c1c144;">else</span>
<span style="color:#777777;"> 118    </span><span>                </span><span style="color:#c1c144;">return</span><span> </span><span style="color:#c3bdaf;">suggestions</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">map</span><span style="color:#47b8d7;">(</span><span style="color:#c1c144;">function</span><span style="color:#47b8d7;">(</span><span style="color:#c3bdaf;">suggestion</span><span style="color:#47b8d7;">)</span><span> </span><span style="color:#47b8d7;">{</span>
<span style="color:#777777;"> 119    </span><span>                    </span><span style="color:#c1c144;">return</span><span> </span><span style="color:#c1c144;">this</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">_suggest</span><span style="color:#47b8d7;">(</span><span style="color:#c3bdaf;">suggestion</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">text</span><span style="color:#47b8d7;">,</span><span> </span><span style="color:#c3bdaf;">suggestion</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">html</span><span style="color:#47b8d7;">)[</span><span style="color:#9b456f;">0</span><span style="color:#47b8d7;">];</span>
<span style="color:#777777;"> 120    </span><span>                </span><span style="color:#47b8d7;">},</span><span> </span><span style="color:#c1c144;">this</span><span style="color:#47b8d7;">);</span>
<span style="color:#777777;"> 121    </span><span>        </span><span style="color:#47b8d7;">}</span>
<span style="color:#777777;"> 122    </span><span>        </span><span style="color:#c1c144;">return</span><span> </span><span style="color:#c3bdaf;">suggestions</span><span style="color:#47b8d7;">;</span>
<span style="color:#777777;"> 123    </span><span>    </span><span style="color:#47b8d7;">};</span>
<span style="color:#777777;"> 124    </span><span>    </span><span style="color:#636666;font-style:italic;">/**
</span><span style="color:#777777;"> 125    </span><span style="color:#636666;font-style:italic;">     * Adds suggestion to the history
</span><span style="color:#777777;"> 126    </span><span style="color:#636666;font-style:italic;">     */</span>
<span style="color:#777777;"> 127    </span><span>    </span><span style="color:#c3bdaf;">noun</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">addHistory</span><span> </span><span style="color:#47b8d7;">=</span><span> </span><span style="color:#c1c144;">function</span><span> </span><span style="color:#c3bdaf;">addHistory</span><span style="color:#47b8d7;">(</span><span style="color:#c3bdaf;">suggestion</span><span style="color:#47b8d7;">)</span><span> </span><span style="color:#47b8d7;">{</span>
<span style="color:#777777;"> 128    </span><span>        </span><span style="color:#c1c144;">if</span><span> </span><span style="color:#47b8d7;">(</span><span style="color:#c3bdaf;">suggestion</span><span> </span><span style="color:#47b8d7;">&&</span><span> </span><span style="color:#c3bdaf;">suggestion</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">text</span><span style="color:#47b8d7;">)</span><span> </span><span style="color:#47b8d7;">{</span>
<span style="color:#777777;"> 129    </span><span>            </span><span style="color:#c1c144;">try</span><span> </span><span style="color:#47b8d7;">{</span>
<span style="color:#777777;"> 130    </span><span>                </span><span style="color:#c1c144;">var</span><span> </span><span style="color:#c3bdaf;">suggestions</span><span> </span><span style="color:#47b8d7;">=</span><span> </span><span style="color:#c3bdaf;">Utils</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">decodeJson</span><span style="color:#47b8d7;">(</span><span style="color:#c3bdaf;">Application</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">prefs</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">getValue</span><span style="color:#47b8d7;">(</span><span style="color:#ad9361;">'ubiquity.adjectives.'</span><span> </span><span style="color:#47b8d7;">+</span><span> </span><span style="color:#c1c144;">this</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">_name</span><span> </span><span style="color:#47b8d7;">+</span><span> </span><span style="color:#ad9361;">'.histor</span><span style="color:#ad9361;">y'</span><span style="color:#47b8d7;">,</span><span> </span><span style="color:#ad9361;">'[]'</span><span style="color:#47b8d7;">)).</span><span style="color:#c3bdaf;">filter</span><span style="color:#47b8d7;">(</span><span style="color:#c1c144;">function</span><span style="color:#47b8d7;">(</span><span style="color:#c3bdaf;">element</span><span style="color:#47b8d7;">){</span>
<span style="color:#777777;"> 131    </span><span>                    </span><span style="color:#c1c144;">return</span><span> </span><span style="color:#47b8d7;">(</span><span style="color:#c3bdaf;">element</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">text</span><span> </span><span style="color:#47b8d7;">!=</span><span> </span><span style="color:#c3bdaf;">suggestion</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">text</span><span style="color:#47b8d7;">);</span>
<span style="color:#777777;"> 132    </span><span>                </span><span style="color:#47b8d7;">}).</span><span style="color:#c3bdaf;">slice</span><span style="color:#47b8d7;">(</span><span style="color:#9b456f;">0</span><span style="color:#47b8d7;">,</span><span> </span><span style="color:#c1c144;">this</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">memory</span><span> </span><span style="color:#47b8d7;">-</span><span> </span><span style="color:#9b456f;">1</span><span style="color:#47b8d7;">);</span>
<span style="color:#777777;"> 133    </span><span>                </span><span style="color:#c3bdaf;">suggestions</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">unshift</span><span style="color:#47b8d7;">(</span><span style="color:#c3bdaf;">suggestion</span><span style="color:#47b8d7;">);</span>
<span style="color:#777777;"> 134    </span><span>                </span><span style="color:#c3bdaf;">Application</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">prefs</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">setValue</span><span style="color:#47b8d7;">(</span><span style="color:#ad9361;">'ubiquity.adjectives.'</span><span> </span><span style="color:#47b8d7;">+</span><span> </span><span style="color:#c1c144;">this</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">_name</span><span> </span><span style="color:#47b8d7;">+</span><span> </span><span style="color:#ad9361;">'.history'</span><span style="color:#47b8d7;">,</span><span> </span><span style="color:#c3bdaf;">Utils</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">encodeJson</span><span style="color:#47b8d7;">(</span><span style="color:#c3bdaf;">suggestions</span><span style="color:#47b8d7;">));</span><span style="color:#777777;">        </span>
<span style="color:#777777;"> 135    </span><span>            </span><span style="color:#47b8d7;">}</span><span> </span><span style="color:#c1c144;">catch</span><span> </span><span style="color:#47b8d7;">(</span><span style="color:#c3bdaf;">e</span><span style="color:#47b8d7;">)</span><span> </span><span style="color:#47b8d7;">{</span>
<span style="color:#777777;"> 136    </span><span>                </span><span style="color:#c3bdaf;">Logger</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">log</span><span style="color:#47b8d7;">(</span><span style="color:#c3bdaf;">e</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">toSource</span><span style="color:#47b8d7;">());</span>
<span style="color:#777777;"> 137    </span><span>            </span><span style="color:#47b8d7;">}</span>
<span style="color:#777777;"> 138    </span><span>        </span><span style="color:#47b8d7;">}</span>
<span style="color:#777777;"> 139    </span><span>    </span><span style="color:#47b8d7;">};</span>
<span style="color:#777777;"> 140    </span><span>    </span><span style="color:#636666;font-style:italic;">/**
</span><span style="color:#777777;"> 141    </span><span style="color:#636666;font-style:italic;">     * Removes suggestion from history
</span><span style="color:#777777;"> 142    </span><span style="color:#636666;font-style:italic;">     */</span>
<span style="color:#777777;"> 143    </span><span>    </span><span style="color:#c3bdaf;">noun</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">removeHistory</span><span> </span><span style="color:#47b8d7;">=</span><span> </span><span style="color:#c1c144;">function</span><span> </span><span style="color:#c3bdaf;">removeHistory</span><span style="color:#47b8d7;">(</span><span style="color:#c3bdaf;">suggestion</span><span style="color:#47b8d7;">)</span><span> </span><span style="color:#47b8d7;">{</span>
<span style="color:#777777;"> 144    </span><span>        </span><span style="color:#c1c144;">if</span><span> </span><span style="color:#47b8d7;">(</span><span style="color:#c3bdaf;">suggestion</span><span style="color:#47b8d7;">)</span><span> </span><span style="color:#47b8d7;">{</span>
<span style="color:#777777;"> 145    </span><span>            </span><span style="color:#c1c144;">try</span><span> </span><span style="color:#47b8d7;">{</span>
<span style="color:#777777;"> 146    </span><span>                </span><span style="color:#c1c144;">var</span><span> </span><span style="color:#c3bdaf;">suggestions</span><span> </span><span style="color:#47b8d7;">=</span><span> </span><span style="color:#c3bdaf;">Utils</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">decodeJson</span><span style="color:#47b8d7;">(</span><span style="color:#c3bdaf;">Application</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">prefs</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">getValue</span><span style="color:#47b8d7;">(</span><span style="color:#ad9361;">'ubiquity.adjectives.'</span><span> </span><span style="color:#47b8d7;">+</span><span> </span><span style="color:#c1c144;">this</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">_name</span><span> </span><span style="color:#47b8d7;">+</span><span> </span><span style="color:#ad9361;">'.histor</span><span style="color:#777777;">        </span><span style="color:#ad9361;">y'</span><span style="color:#47b8d7;">,</span><span> </span><span style="color:#ad9361;">'[]'</span><span style="color:#47b8d7;">)).</span><span style="color:#c3bdaf;">filter</span><span style="color:#47b8d7;">(</span><span style="color:#c1c144;">function</span><span style="color:#47b8d7;">(</span><span style="color:#c3bdaf;">element</span><span style="color:#47b8d7;">){</span>
<span style="color:#777777;"> 147    </span><span>                    </span><span style="color:#c1c144;">return</span><span> </span><span style="color:#47b8d7;">(</span><span style="color:#c3bdaf;">element</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">text</span><span> </span><span style="color:#47b8d7;">!=</span><span> </span><span style="color:#c3bdaf;">suggestion</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">text</span><span style="color:#47b8d7;">);</span>
<span style="color:#777777;"> 148    </span><span>                </span><span style="color:#47b8d7;">});</span>
<span style="color:#777777;"> 149    </span><span>                </span><span style="color:#c3bdaf;">Application</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">prefs</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">setValue</span><span style="color:#47b8d7;">(</span><span style="color:#ad9361;">'ubiquity.adjectives.'</span><span> </span><span style="color:#47b8d7;">+</span><span> </span><span style="color:#c1c144;">this</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">_name</span><span> </span><span style="color:#47b8d7;">+</span><span> </span><span style="color:#ad9361;">'.history'</span><span style="color:#47b8d7;">,</span><span> </span><span style="color:#c3bdaf;">Utils</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">encodeJson</span><span style="color:#47b8d7;">(</span><span style="color:#c3bdaf;">suggestions</span><span style="color:#47b8d7;">));</span><span style="color:#777777;">        </span>
<span style="color:#777777;"> 150    </span><span>            </span><span style="color:#47b8d7;">}</span><span> </span><span style="color:#c1c144;">catch</span><span style="color:#47b8d7;">(</span><span style="color:#c3bdaf;">e</span><span style="color:#47b8d7;">)</span><span> </span><span style="color:#47b8d7;">{</span>
<span style="color:#777777;"> 151    </span><span>                </span><span style="color:#c3bdaf;">Logger</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">log</span><span style="color:#47b8d7;">(</span><span style="color:#c3bdaf;">e</span><span style="color:#47b8d7;">.</span><span style="color:#c3bdaf;">toSource</span><span style="color:#47b8d7;">());</span>
<span style="color:#777777;"> 152    </span><span>            </span><span style="color:#47b8d7;">}</span>
<span style="color:#777777;"> 153    </span><span>        </span><span style="color:#47b8d7;">}</span>
<span style="color:#777777;"> 154    </span><span>    </span><span style="color:#47b8d7;">};</span>
<span style="color:#777777;"> 155    </span><span>    </span><span style="color:#c1c144;">return</span><span> </span><span style="color:#c3bdaf;">noun</span><span style="color:#47b8d7;">;</span>
<span style="color:#777777;"> 156    </span><span style="color:#47b8d7;">};</span>
<span style="color:#777777;"> 157    </span><span style="color:#777777;">        </span></span></pre>
h2. Problems / Plans


<ul>
	<li>Ubiquity had a regression recently so I had to introduce workaround to a <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=484615">bug 484615.</a></li>
	<li>Bugzilla API is not really seems to be designed for this so changes there will be more then welcome (As you might noticed in the screen-shots there are fields like component product reporter where you can see id's, while just textual description is much better, making the separate calls for all this fields could be expensive and it will make code more complex => hard to maintain).
*<cite class="comment-author vcard comment-meta commentmetadata"><span class="author fn">Max Kanat-Alexander</span>??* - Added nice comment suggesting help in this direction.
Max unfortunately I have no idea how to contact you, so if you're reading this post I'll be happy to have a chat with you about it.</li>
	<li>Lack of time !!!!</li>
	<li>I'll be happy to contribute CreateAdjective to Ubiquity, I don't mind to change it the way that it can fit the rest code-base, just let me know if there is any interest in this direction</li>
	<li>I'm going to implement full featured client for Bugzilla, (don't know about admin part think it's too crazy)</li>
	<li>Next command that will be added to this Bugzilla collection will be bugzilla-comment</li>
</ul>
Wow I wrote a lot !!! Hope you're still enjoying reading this post. As always any feedback is more then welcome